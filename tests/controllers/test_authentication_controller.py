# -*- coding: utf-8 -*-

"""
multiauthsample

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from multiauthsample.api_helper import APIHelper


class AuthenticationControllerTests(ControllerTestBase):

    controller = None

    @classmethod
    def setUpClass(cls):
        super(AuthenticationControllerTests, cls).setUpClass()
        cls.controller = cls.client.authentication
        cls.response_catcher = cls.controller.http_call_back

    # Todo: Add description for test test_o_auth_2_test
    def test_o_auth_2_test(self):

        # Perform the API call through the SDK function
        result = self.controller.o_auth_bearer_token()

        # Test response code
        assert self.response_catcher.response.status_code == 200
        
        # Test whether the captured response is as we expected
        assert result is not None
        assert 'You\'ve passed the test!' == self.response_catcher.response.text

    # Todo: Add description for test test_custom_authentication_test
    def test_custom_authentication_test(self):

        # Perform the API call through the SDK function
        result = self.controller.custom_authentication()

        # Test response code
        assert self.response_catcher.response.status_code == 200
        
        # Test whether the captured response is as we expected
        assert result is not None
        assert 'You\'ve passed the test!' == self.response_catcher.response.text

    # Todo: Add description for test test_custom_query_param_test
    def test_custom_query_param_test(self):

        # Perform the API call through the SDK function
        result = self.controller.custom_query_or_header_authentication()

        # Test response code
        assert self.response_catcher.response.status_code == 200
        
        # Test whether the captured response is as we expected
        assert result is not None
        assert 'You\'ve passed the test!' == self.response_catcher.response.text

    # Todo: Add description for test test_o_auth_or_combination_test
    def test_o_auth_or_combination_test(self):

        # Perform the API call through the SDK function
        result = self.controller.o_auth_grant_types_or_combinations()

        # Test response code
        assert self.response_catcher.response.status_code == 200
        
        # Test whether the captured response is as we expected
        assert result is not None
        assert 'You\'ve passed the test!' == self.response_catcher.response.text

    # Todo: Add description for test test_check_service_status
    def test_check_service_status(self):

        # Perform the API call through the SDK function
        result = self.controller.o_auth_client_credentials_grant()

        # Test response code
        assert self.response_catcher.response.status_code == 200

    # Todo: Add description for test test_basic_auth_and_api_key_and_api_header
    def test_basic_auth_and_api_key_and_api_header(self):

        # Perform the API call through the SDK function
        result = self.controller.basic_auth_and_api_header_auth()

        # Test response code
        assert self.response_catcher.response.status_code == 200
        
        # Test whether the captured response is as we expected
        assert result is not None
        assert 'You\'ve passed the test!' == self.response_catcher.response.text

    # Todo: Add description for test test_multiple_auth_or_combination_test
    def test_multiple_auth_or_combination_test(self):

        # Perform the API call through the SDK function
        result = self.controller.multiple_auth_combination()

        # Test response code
        assert self.response_catcher.response.status_code == 200
        
        # Test whether the captured response is as we expected
        assert result is not None
        assert 'You\'ve passed the test!' == self.response_catcher.response.text

